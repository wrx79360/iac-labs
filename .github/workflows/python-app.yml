# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

concurrency:
  group: python-app

jobs:
  build:
    strategy:
      matrix:
        os: ["ubuntu-latest", "windows-latest"]
      runs-on: ${{ matrix.os }}
    defaults:
      run:
        working-directory: ./example-app
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install Poetry Action
      uses: snok/install-poetry@v1.3.4
    - name: Install Dependencies
      run: poetry install --no-root
    - name: Cache build venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: /home/runner/.cache/pypoetry/virtualenvs
        key: ${{ matrix.os }}-venv
        
  lint: 
    runs-on: ubuntu-latest
    needs: build
    defaults:
      run:
        working-directory: ./example-app
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install Poetry Action
      uses: snok/install-poetry@v1.3.4
    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: /home/runner/.cache/pypoetry/virtualenvs
        key: ${{ matrix.os }}-venv
    - name: Lint
      run: | 
        poetry run task lint

  formatter:
    runs-on: ubuntu-latest
    needs: build
    defaults:
      run:
        working-directory: ./example-app
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install Poetry Action
      uses: snok/install-poetry@v1.3.4
    - name: Cache build venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: /home/runner/.cache/pypoetry/virtualenvs
        key: ${{ matrix.os }}-venv
    - name: Format
      run: |
        poetry run task formatter


  security:
    runs-on: ubuntu-latest
    needs: build
    defaults:
      run:
        working-directory: ./example-app
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install Poetry Action
      uses: snok/install-poetry@v1.3.4
    - name: Cache build venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: /home/runner/.cache/pypoetry/virtualenvs
        key: ${{ matrix.os }}-venv
    - name: Security
      run: |
        poetry run task security

  unittests:
    needs: [lint, formatter, security]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./example-app
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - name: Install Poetry Action
        uses: snok/install-poetry@v1.3.4
      - name: Use cached build venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: /home/runner/.cache/pypoetry/virtualenvs
          key: ${{ matrix.os }}-venv
      - name: Test
        run: |
          poetry run task test
